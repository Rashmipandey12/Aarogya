// Generated by view binder compiler. Do not edit!
package com.example.ayurveda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ayurveda.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemStoreProductsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addcartbtn;

  @NonNull
  public final ImageView prodImg;

  @NonNull
  public final TextView prodNameEn;

  @NonNull
  public final TextView prodNameSn;

  @NonNull
  public final TextView prodPrice;

  @NonNull
  public final TextView prodPrice2;

  private ListItemStoreProductsBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addcartbtn, @NonNull ImageView prodImg,
      @NonNull TextView prodNameEn, @NonNull TextView prodNameSn, @NonNull TextView prodPrice,
      @NonNull TextView prodPrice2) {
    this.rootView = rootView;
    this.addcartbtn = addcartbtn;
    this.prodImg = prodImg;
    this.prodNameEn = prodNameEn;
    this.prodNameSn = prodNameSn;
    this.prodPrice = prodPrice;
    this.prodPrice2 = prodPrice2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemStoreProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemStoreProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_store_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemStoreProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addcartbtn;
      FloatingActionButton addcartbtn = ViewBindings.findChildViewById(rootView, id);
      if (addcartbtn == null) {
        break missingId;
      }

      id = R.id.prodImg;
      ImageView prodImg = ViewBindings.findChildViewById(rootView, id);
      if (prodImg == null) {
        break missingId;
      }

      id = R.id.prodNameEn;
      TextView prodNameEn = ViewBindings.findChildViewById(rootView, id);
      if (prodNameEn == null) {
        break missingId;
      }

      id = R.id.prodNameSn;
      TextView prodNameSn = ViewBindings.findChildViewById(rootView, id);
      if (prodNameSn == null) {
        break missingId;
      }

      id = R.id.prodPrice;
      TextView prodPrice = ViewBindings.findChildViewById(rootView, id);
      if (prodPrice == null) {
        break missingId;
      }

      id = R.id.prodPrice2;
      TextView prodPrice2 = ViewBindings.findChildViewById(rootView, id);
      if (prodPrice2 == null) {
        break missingId;
      }

      return new ListItemStoreProductsBinding((ConstraintLayout) rootView, addcartbtn, prodImg,
          prodNameEn, prodNameSn, prodPrice, prodPrice2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
