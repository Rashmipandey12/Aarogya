// Generated by view binder compiler. Do not edit!
package com.example.ayurveda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ayurveda.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListUserCompletedAppointmentsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appDoneDocDate;

  @NonNull
  public final TextView appDoneDocName;

  @NonNull
  public final TextView appDoneDocTime;

  @NonNull
  public final ImageButton goDoctorProfile;

  @NonNull
  public final ImageView imageView16;

  private ListUserCompletedAppointmentsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView appDoneDocDate, @NonNull TextView appDoneDocName,
      @NonNull TextView appDoneDocTime, @NonNull ImageButton goDoctorProfile,
      @NonNull ImageView imageView16) {
    this.rootView = rootView;
    this.appDoneDocDate = appDoneDocDate;
    this.appDoneDocName = appDoneDocName;
    this.appDoneDocTime = appDoneDocTime;
    this.goDoctorProfile = goDoctorProfile;
    this.imageView16 = imageView16;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListUserCompletedAppointmentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListUserCompletedAppointmentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_user_completed_appointments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListUserCompletedAppointmentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appDoneDocDate;
      TextView appDoneDocDate = ViewBindings.findChildViewById(rootView, id);
      if (appDoneDocDate == null) {
        break missingId;
      }

      id = R.id.appDoneDocName;
      TextView appDoneDocName = ViewBindings.findChildViewById(rootView, id);
      if (appDoneDocName == null) {
        break missingId;
      }

      id = R.id.appDoneDocTime;
      TextView appDoneDocTime = ViewBindings.findChildViewById(rootView, id);
      if (appDoneDocTime == null) {
        break missingId;
      }

      id = R.id.goDoctorProfile;
      ImageButton goDoctorProfile = ViewBindings.findChildViewById(rootView, id);
      if (goDoctorProfile == null) {
        break missingId;
      }

      id = R.id.imageView16;
      ImageView imageView16 = ViewBindings.findChildViewById(rootView, id);
      if (imageView16 == null) {
        break missingId;
      }

      return new ListUserCompletedAppointmentsBinding((ConstraintLayout) rootView, appDoneDocDate,
          appDoneDocName, appDoneDocTime, goDoctorProfile, imageView16);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
