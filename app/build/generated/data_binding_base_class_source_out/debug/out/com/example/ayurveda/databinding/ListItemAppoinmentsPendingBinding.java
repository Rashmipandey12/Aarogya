// Generated by view binder compiler. Do not edit!
package com.example.ayurveda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ayurveda.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemAppoinmentsPendingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton goDoctorProfile;

  @NonNull
  public final ImageView imageView17;

  @NonNull
  public final TextView pDatepending;

  @NonNull
  public final TextView pNamepending;

  @NonNull
  public final TextView pTimepending;

  private ListItemAppoinmentsPendingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton goDoctorProfile, @NonNull ImageView imageView17,
      @NonNull TextView pDatepending, @NonNull TextView pNamepending,
      @NonNull TextView pTimepending) {
    this.rootView = rootView;
    this.goDoctorProfile = goDoctorProfile;
    this.imageView17 = imageView17;
    this.pDatepending = pDatepending;
    this.pNamepending = pNamepending;
    this.pTimepending = pTimepending;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemAppoinmentsPendingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemAppoinmentsPendingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_appoinments_pending, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemAppoinmentsPendingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.goDoctorProfile;
      ImageButton goDoctorProfile = ViewBindings.findChildViewById(rootView, id);
      if (goDoctorProfile == null) {
        break missingId;
      }

      id = R.id.imageView17;
      ImageView imageView17 = ViewBindings.findChildViewById(rootView, id);
      if (imageView17 == null) {
        break missingId;
      }

      id = R.id.pDatepending;
      TextView pDatepending = ViewBindings.findChildViewById(rootView, id);
      if (pDatepending == null) {
        break missingId;
      }

      id = R.id.pNamepending;
      TextView pNamepending = ViewBindings.findChildViewById(rootView, id);
      if (pNamepending == null) {
        break missingId;
      }

      id = R.id.pTimepending;
      TextView pTimepending = ViewBindings.findChildViewById(rootView, id);
      if (pTimepending == null) {
        break missingId;
      }

      return new ListItemAppoinmentsPendingBinding((ConstraintLayout) rootView, goDoctorProfile,
          imageView17, pDatepending, pNamepending, pTimepending);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
