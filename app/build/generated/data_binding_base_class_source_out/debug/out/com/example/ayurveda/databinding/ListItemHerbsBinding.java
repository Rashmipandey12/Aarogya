// Generated by view binder compiler. Do not edit!
package com.example.ayurveda.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ayurveda.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemHerbsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircleImageView avatarP;

  @NonNull
  public final ImageButton goHerbProfile;

  @NonNull
  public final TextView herbNameEn;

  @NonNull
  public final TextView herbNameSn;

  private ListItemHerbsBinding(@NonNull ConstraintLayout rootView, @NonNull CircleImageView avatarP,
      @NonNull ImageButton goHerbProfile, @NonNull TextView herbNameEn,
      @NonNull TextView herbNameSn) {
    this.rootView = rootView;
    this.avatarP = avatarP;
    this.goHerbProfile = goHerbProfile;
    this.herbNameEn = herbNameEn;
    this.herbNameSn = herbNameSn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemHerbsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemHerbsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_herbs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemHerbsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatarP;
      CircleImageView avatarP = ViewBindings.findChildViewById(rootView, id);
      if (avatarP == null) {
        break missingId;
      }

      id = R.id.goHerbProfile;
      ImageButton goHerbProfile = ViewBindings.findChildViewById(rootView, id);
      if (goHerbProfile == null) {
        break missingId;
      }

      id = R.id.herbNameEn;
      TextView herbNameEn = ViewBindings.findChildViewById(rootView, id);
      if (herbNameEn == null) {
        break missingId;
      }

      id = R.id.herbNameSn;
      TextView herbNameSn = ViewBindings.findChildViewById(rootView, id);
      if (herbNameSn == null) {
        break missingId;
      }

      return new ListItemHerbsBinding((ConstraintLayout) rootView, avatarP, goHerbProfile,
          herbNameEn, herbNameSn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
